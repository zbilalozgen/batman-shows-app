{"version":3,"sources":["asset/batarang.svg","components/Header.js","components/Movie.js","redux/actions.js","redux/actionCreators.js","components/MovieList.js","components/Sidebar.js","components/Detail.js","pages/MovieDetail.js","pages/Homepage.js","container/Main.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Header","className","src","batarang","alt","Movie","props","movie","name","rating","premiered","id","image","genres","to","medium","average","map","genre","LOADING","FETCH_ERROR","SORT_TYPE","loading","type","fetchError","error","MovieList","scrollHandle","window","onscroll","innerHeight","scrollY","document","body","scrollHeight","setState","index","state","console","log","movies","sortMovies","sort","a","b","Date","show","this","getData","addEventListener","removeEventListener","ShowMovies","slice","key","Loading","bgColor","spinnerColor","textColor","logoSrc","text","Err","Component","connect","dispatch","axios","get","then","res","data","setTimeout","catch","err","message","sortType","classNames","sidebar__item","sidebar__item__active","onClick","Detail","movieDetail","summary","htmlSum","ReactHtmlParser","MovieDetail","getDetail","match","params","React","Homepage","Main","exact","path","component","App","Boolean","location","hostname","rootReducer","action","_movies","store","createStore","reducer","compose","applyMiddleware","thunk","devToolsExtension","f","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,sC,kHCO5BC,MAJf,WACE,OAAO,yBAAKC,UAAU,OAAOC,IAAKC,IAAUC,IAAI,c,QC0BnCC,MA1Bf,SAAeC,GAAQ,IAAD,EACmCA,EAAMC,MAArDC,EADY,EACZA,KAAMC,EADM,EACNA,OAAQC,EADF,EACEA,UAAWC,EADb,EACaA,GAAIC,EADjB,EACiBA,MAAOC,EADxB,EACwBA,OAE5C,OACE,oCACE,kBAAC,IAAD,CAAMZ,UAAU,oBAAoBa,GAAE,uBAAkBH,IACtD,yBAAKV,UAAU,+BACb,yBAAKC,IAAKU,EAAMG,OAAQX,IAAKI,IAC7B,yBAAKP,UAAU,yBACb,wBAAIA,UAAU,oBAAoBO,GAClC,4BACGC,EAAOO,QAAP,kBACcP,EAAOO,SAClB,wBAEN,6CAAmBN,GAClBG,EAAOI,KAAI,SAAAC,GACV,OAAO,0BAAMjB,UAAU,wBAAhB,UAA2CiB,Y,gDCpBnDC,EAAU,UACVC,EAAc,cAEdC,EAAY,Y,iBCKlB,SAASC,IACd,MAAO,CAAEC,KAAMJ,GAqBV,SAASK,EAAWC,GACzB,MAAO,CAAEF,KAAMH,EAAaK,MAAOA,G,6BCxB/BC,E,YACJ,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KAgBRqB,aAAe,WACbC,OAAOC,SAAW,WAEdD,OAAOE,YAAcF,OAAOG,SAC5BC,SAASC,KAAKC,aAAe,GAE7B,EAAKC,SACH,CACEC,MAAO,EAAKC,MAAMD,MAAQ,GAE5BE,QAAQC,IAAI,EAAKF,MAAMG,WA3BZ,EAiCnBC,WAAa,SAACD,EAAQE,GACpB,MAAa,KAATA,EACKF,EACW,cAATE,EACF,YAAIF,GAAQE,MAAK,SAASC,EAAGC,GAClC,OAAO,IAAIC,KAAKD,EAAEE,KAAKpC,WAAa,IAAImC,KAAKF,EAAEG,KAAKpC,cAEpC,eAATgC,EACF,YAAIF,GAAQE,MAAK,SAASC,EAAGC,GAClC,OAAO,IAAIC,KAAKF,EAAEG,KAAKpC,WAAa,IAAImC,KAAKD,EAAEE,KAAKpC,mBAFjD,GArCP,EAAK2B,MAAQ,CACXD,MAAO,GAJQ,E,iFASjBW,KAAKzC,MAAM0C,UACXpB,OAAOqB,iBAAiB,SAAUF,KAAKpB,gB,6CAIvCC,OAAOsB,oBAAoB,SAAUH,KAAKpB,gB,+BAkC1C,IAAMwB,EAAaJ,KAAKN,WAAWM,KAAKzC,MAAMkC,OAAQO,KAAKzC,MAAMoC,MAC9DU,MAAM,EAAGL,KAAKV,MAAMD,OACpBnB,KAAI,SAAAV,GACH,OAAO,kBAAC,EAAD,CAAO8C,IAAK9C,EAAMuC,KAAKnC,GAAIJ,MAAOA,EAAMuC,UAE7CQ,EACJ,kBAAC,IAAD,CACEhC,SAAS,EACTiC,QAAQ,UACRC,aAAa,UACbC,UAAU,UACVC,QAASvD,IACTwD,KAAK,oCAEL,kDAGEC,EAAM,6BAAMb,KAAKzC,MAAMmB,OAC7B,OAAIsB,KAAKzC,MAAMgB,QACNgC,EACEP,KAAKzC,MAAMmB,MACbmC,EAEAT,M,GAxEWU,aA0FTC,eAPS,SAAAzB,GAAK,MAAK,CAChCG,OAAQH,EAAMG,OACdlB,QAASe,EAAMf,QACfG,MAAOY,EAAMZ,MACbiB,KAAML,EAAMK,SAVa,SAAAqB,GAAQ,MAAK,CACtCf,QAAS,SAAAR,GACPuB,GDzEK,SAAAA,GACLA,EAASzC,KACT0C,IACGC,IADH,gDAEGC,MAAK,SAAAC,GACJ,IAAM3B,EAAS2B,EAAIC,KAEnBC,YAAW,WACTN,EAAS,CAAExC,KDtBG,WCsBaiB,OAAQA,MAClC,OAEJ8B,OAAM,SAAAC,GACLR,EAASvC,EAAW+C,EAAIC,oBCwEjBV,CAA6CpC,G,iBCjD5D,IAUeoC,eAJS,SAAAzB,GAAK,MAAK,CAChCK,KAAML,EAAMK,SAPa,SAAAqB,GAAQ,MAAK,CACtCU,SAAU,SAAA/B,GACRqB,EFIG,SAAkBU,GACvB,MAAO,CAAElD,KAAMF,EAAWoD,SAAUA,GELzBA,CAAS/B,QAQPoB,EAtDf,SAAiBxD,GACf,OACE,oCACE,yBAAKL,UAAU,WACb,wBAAIA,UAAU,kBAAd,0BACA,uBACEA,UAAWyE,IAAW,CACpBC,eAAe,EACfC,sBAAsC,eAAftE,EAAMoC,OAE/BmC,QAAS,WACPvE,EAAMmE,SAAS,gBANnB,oBAYA,uBACExE,UAAWyE,IAAW,CACpBC,eAAe,EACfC,sBAAsC,cAAftE,EAAMoC,OAE/BmC,QAAS,WACPvE,EAAMmE,SAAS,eANnB,mBASmB,KAEnB,uBACExE,UAAWyE,IAAW,CACpBC,eAAe,EACfC,sBAAsC,KAAftE,EAAMoC,OAE/BmC,QAAS,WACPvE,EAAMmE,SAAS,MANnB,oB,wBCcOK,MA5Cf,SAAgBxE,GAAQ,IAAD,EASjBA,EAAMyE,YAPRvE,EAFmB,EAEnBA,KACAwE,EAHmB,EAGnBA,QACApE,EAJmB,EAInBA,MACAH,EALmB,EAKnBA,OACAI,EANmB,EAMnBA,OACAU,EAPmB,EAOnBA,KACAb,EARmB,EAQnBA,UAGF4B,QAAQC,IAAIjC,GAEZ,IAAM2E,EAAUC,IAAgBF,GAEhC,OACE,6BAAS/E,UAAU,kBACjB,6BAASA,UAAU,uBACjB,4BAAQA,UAAU,kBAChB,yBAAKC,IAAKU,EAAMG,OAAQd,UAAU,gBAAgBG,IAAI,OAGxD,yBAAKH,UAAU,gBACb,wBAAIA,UAAU,iBAAiBO,GAC9BK,EAAOI,KAAI,SAAAC,GACV,OAAO,0BAAMjB,UAAU,oBAAhB,UAAuCiB,OAEhD,uBAAGjB,UAAU,iBAAiBgF,IAGhC,4BAAQhF,UAAU,kBAChB,0BAAMA,UAAU,oBAAoBsB,GACpC,0BAAMtB,UAAU,oBACbQ,EAAOO,QAAP,kBACcP,EAAOO,SAClB,wBAEN,0BAAMf,UAAU,oBAAoBS,OCjCxCyE,E,YACJ,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KAED+B,MAAQ,GAHI,E,iFAOjBU,KAAKzC,MAAM8E,UAAUrC,KAAKzC,MAAM+E,MAAMC,OAAO3E,M,+BAI7C,IAAM2C,EACJ,kBAAC,IAAD,CACEhC,SAAS,EACTiC,QAAQ,UACRC,aAAa,UACbC,UAAU,UACVC,QAASvD,IACTwD,KAAK,qCAGHC,EAAM,6BAAMb,KAAKzC,MAAMmB,OAE7B,OAAIsB,KAAKzC,MAAMgB,QACNgC,EACEP,KAAKzC,MAAMmB,MACbmC,EAEA,kBAAC,EAAD,CAAQmB,YAAahC,KAAKzC,MAAMyE,kB,GA7BnBQ,IAAM1B,WA8CjBC,eANS,SAAAzB,GAAK,MAAK,CAChC0C,YAAa1C,EAAM0C,YACnBzD,QAASe,EAAMf,QACfG,MAAOY,EAAMZ,UATY,SAAAsC,GAAQ,MAAK,CACtCqB,UAAW,SAAAzE,GACToD,EJNqB,SAAApD,GACvB,OAAO,SAAAoD,GACLA,EAASzC,KACT0C,IACGC,IADH,uCACuCtD,IACpCuD,MAAK,SAAAC,GACJ,IAAMY,EAAcZ,EAAIC,KAExBC,YAAW,WACTN,EAAS,CAAExC,KD3CK,aC2CawD,YAAaA,MACzC,OAEJT,OAAM,SAAAC,GACLR,EAASvC,EAAW+C,EAAIC,cIPnBY,CAAUzE,QAURmD,CAA6CqB,GC/B7CK,MAnBf,WACE,OACE,oCACE,yBAAKvF,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,YCECwF,MAXf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWJ,IACjC,kBAAC,IAAD,CAAOG,KAAK,mBAAmBC,UAAWT,OCUnCU,MAXf,SAAavF,GACX,OACE,oCACE,kBAAC,IAAD,CAAMQ,GAAG,KACP,kBAAC,EAAD,CAAQb,UAAU,UAEpB,kBAAC,EAAD,QCFc6F,QACW,cAA7BlE,OAAOmE,SAASC,UAEe,UAA7BpE,OAAOmE,SAASC,UAEhBpE,OAAOmE,SAASC,SAASX,MACvB,2D,4BC2BSY,EArCK,WASjB,IARD5D,EAQA,uDARQ,CACNG,OAAQ,GACRlB,SAAS,EACTG,MAAO,KACPsD,YAAa,CAAEnE,MAAO,GAAIC,OAAQ,GAAIJ,OAAQ,IAC9CiC,KAAM,IAERwD,EACA,uCACA,OAAQA,EAAO3E,MACb,IVnBoB,WUoBlB,OAAO,eACFc,EADL,CAEEG,OAAO,YAAK0D,EAAO1D,QACnB2D,QAAQ,YAAKD,EAAO1D,QACpBlB,SAAS,EACTG,MAAO,OAEX,KAAKN,EACH,OAAO,eAAKkB,EAAZ,CAAmBf,SAAS,IAC9B,KAAKF,EACH,OAAO,eAAKiB,EAAZ,CAAmBf,SAAS,EAAOG,MAAOyE,EAAOzE,QACnD,IV5BsB,aU6BpB,OAAO,eACFY,EADL,CAEE0C,YAAamB,EAAOnB,YACpBzD,SAAS,EACTG,MAAO,OAEX,KAAKJ,EACH,OAAO,eAAKgB,EAAZ,CAAmBK,KAAMwD,EAAOzB,WAClC,QACE,OAAOpC,IC9BE+D,EAPDC,YACZC,EACAC,YACEC,YAAgBC,KAChB7E,OAAO8E,kBAAoB9E,OAAO8E,oBAAsB,SAAAC,GAAC,OAAIA,KCQjEC,IAASC,OAAO,mBAPG,kBACjB,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,UAIU,MAAgBpE,SAAS8E,eAAe,SHmHlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/C,MAAK,SAAAgD,GACjCA,EAAaC,iB","file":"static/js/main.68158a18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/batarang.ae7fc5d0.svg\";","import React from \"react\";\r\nimport batarang from \"../asset/batarang.svg\";\r\n\r\nfunction Header() {\r\n  return <img className=\"logo\" src={batarang} alt=\"logo-bat\" />;\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Movie(props) {\r\n  const { name, rating, premiered, id, image, genres } = props.movie;\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"movie-card__link \" to={`/moviedetail/${id}`}>\r\n        <div className=\"movie-card container__col-4\">\r\n          <img src={image.medium} alt={name} />\r\n          <div className=\"movie-card__container\">\r\n            <h1 className=\"movie-card_title\">{name}</h1>\r\n            <h3>\r\n              {rating.average\r\n                ? `Rating: ${rating.average}`\r\n                : \"Waiting for reviews!\"}\r\n            </h3>\r\n            <h4>Premier date: {premiered}</h4>\r\n            {genres.map(genre => {\r\n              return <span className=\"movie-card__subtitle\">{`${genre}`}</span>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","export const GET_DATA = \"GET_DATA\";\r\nexport const LOADING = \"LOADING\";\r\nexport const FETCH_ERROR = \"FETCH_ERROR\";\r\nexport const GET_DETAIL = \"GET_DETAIL\";\r\nexport const SORT_TYPE = \"SORT_TYPE\";\r\n","import {\r\n  GET_DATA,\r\n  LOADING,\r\n  FETCH_ERROR,\r\n  GET_DETAIL,\r\n  SORT_TYPE\r\n} from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\nexport function loading() {\r\n  return { type: LOADING };\r\n}\r\n\r\nexport const getData = () => {\r\n  return dispatch => {\r\n    dispatch(loading());\r\n    axios\r\n      .get(`https://api.tvmaze.com/search/shows?q=batman`)\r\n      .then(res => {\r\n        const movies = res.data;\r\n        //To see loading screen\r\n        setTimeout(() => {\r\n          dispatch({ type: GET_DATA, movies: movies });\r\n        }, 20);\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchError(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport function fetchError(error) {\r\n  return { type: FETCH_ERROR, error: error };\r\n}\r\n\r\n// http://api.tvmaze.com/shows/\r\n\r\nexport const getDetail = id => {\r\n  return dispatch => {\r\n    dispatch(loading());\r\n    axios\r\n      .get(`https://api.tvmaze.com/shows/${id}`)\r\n      .then(res => {\r\n        const movieDetail = res.data;\r\n        //To see loading screen\r\n        setTimeout(() => {\r\n          dispatch({ type: GET_DETAIL, movieDetail: movieDetail });\r\n        }, 20);\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchError(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport function sortType(sortType) {\r\n  return { type: SORT_TYPE, sortType: sortType };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { getData } from \"../redux/actionCreators\";\r\nimport { Movie } from \"../components\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingScreen from \"react-loading-screen\";\r\n\r\nimport batarang from \"../asset/batarang.svg\";\r\n\r\nclass MovieList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      index: 6\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getData();\r\n    window.addEventListener(\"scroll\", this.scrollHandle);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.scrollHandle);\r\n  }\r\n\r\n  scrollHandle = () => {\r\n    window.onscroll = () => {\r\n      if (\r\n        window.innerHeight + window.scrollY >=\r\n        document.body.scrollHeight - 1\r\n      ) {\r\n        this.setState(\r\n          {\r\n            index: this.state.index + 4\r\n          },\r\n          console.log(this.state.movies)\r\n        );\r\n      }\r\n    };\r\n  };\r\n\r\n  sortMovies = (movies, sort) => {\r\n    if (sort === \"\") {\r\n      return movies;\r\n    } else if (sort === \"ascending\") {\r\n      return [...movies].sort(function(a, b) {\r\n        return new Date(b.show.premiered) - new Date(a.show.premiered);\r\n      });\r\n    } else if (sort === \"descending\") {\r\n      return [...movies].sort(function(a, b) {\r\n        return new Date(a.show.premiered) - new Date(b.show.premiered);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ShowMovies = this.sortMovies(this.props.movies, this.props.sort)\r\n      .slice(0, this.state.index)\r\n      .map(movie => {\r\n        return <Movie key={movie.show.id} movie={movie.show} />;\r\n      });\r\n    const Loading = (\r\n      <LoadingScreen\r\n        loading={true}\r\n        bgColor=\"#f1f1f1\"\r\n        spinnerColor=\"#9ee5f8\"\r\n        textColor=\"#676767\"\r\n        logoSrc={batarang}\r\n        text=\"Your Batman Movie's on its way  \"\r\n      >\r\n        <div>Loadable content</div>\r\n      </LoadingScreen>\r\n    );\r\n    const Err = <div>{this.props.error}</div>;\r\n    if (this.props.loading) {\r\n      return Loading;\r\n    } else if (this.props.error) {\r\n      return Err;\r\n    } else {\r\n      return ShowMovies;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getData: movies => {\r\n    dispatch(getData(movies));\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies,\r\n  loading: state.loading,\r\n  error: state.error,\r\n  sort: state.sort\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sortType } from \"../redux/actionCreators\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction Sidebar(props) {\r\n  return (\r\n    <>\r\n      <div className=\"sidebar\">\r\n        <h4 className=\"sidebar__title\">SORT BY PREMIERED DATE</h4>\r\n        <p\r\n          className={classNames({\r\n            sidebar__item: true,\r\n            sidebar__item__active: props.sort === \"descending\"\r\n          })}\r\n          onClick={() => {\r\n            props.sortType(\"descending\");\r\n          }}\r\n        >\r\n          OLDEST TO NEWEST\r\n        </p>\r\n\r\n        <p\r\n          className={classNames({\r\n            sidebar__item: true,\r\n            sidebar__item__active: props.sort === \"ascending\"\r\n          })}\r\n          onClick={() => {\r\n            props.sortType(\"ascending\");\r\n          }}\r\n        >\r\n          NEWEST TO OLDEST{\" \"}\r\n        </p>\r\n        <p\r\n          className={classNames({\r\n            sidebar__item: true,\r\n            sidebar__item__active: props.sort === \"\"\r\n          })}\r\n          onClick={() => {\r\n            props.sortType(\"\");\r\n          }}\r\n        >\r\n          REMOVE SORT\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  sortType: sort => {\r\n    dispatch(sortType(sort));\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  sort: state.sort\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n","import React from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nfunction Detail(props) {\r\n  const {\r\n    name,\r\n    summary,\r\n    image,\r\n    rating,\r\n    genres,\r\n    type,\r\n    premiered\r\n  } = props.movieDetail;\r\n\r\n  console.log(props);\r\n\r\n  const htmlSum = ReactHtmlParser(summary);\r\n\r\n  return (\r\n    <section className=\"card-container\">\r\n      <article className=\"c-card c-card--wide\">\r\n        <header className=\"c-card__header\">\r\n          <img src={image.medium} className=\"c-card__image\" alt=\" \" />\r\n        </header>\r\n\r\n        <div className=\"c-card__body\">\r\n          <h1 className=\"c-card__title\">{name}</h1>\r\n          {genres.map(genre => {\r\n            return <span className=\"c-card__subtitle\">{`${genre}`}</span>;\r\n          })}\r\n          <p className=\"c-card__intro\">{htmlSum}</p>\r\n        </div>\r\n\r\n        <footer className=\"c-card__footer\">\r\n          <span className=\"c-card__subtitle\">{type}</span>\r\n          <span className=\"c-card__subtitle\">\r\n            {rating.average\r\n              ? `Rating: ${rating.average}`\r\n              : \"Waiting for reviews!\"}\r\n          </span>\r\n          <span className=\"c-card__subtitle\">{premiered}</span>\r\n        </footer>\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport Detail from \"../components/Detail\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDetail } from \"../redux/actionCreators\";\r\nimport LoadingScreen from \"react-loading-screen\";\r\nimport batarang from \"../asset/batarang.svg\";\r\n\r\nclass MovieDetail extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getDetail(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const Loading = (\r\n      <LoadingScreen\r\n        loading={true}\r\n        bgColor=\"#f1f1f1\"\r\n        spinnerColor=\"#9ee5f8\"\r\n        textColor=\"#676767\"\r\n        logoSrc={batarang}\r\n        text=\"Your Batman Movie's on its way  \"\r\n      ></LoadingScreen>\r\n    );\r\n    const Err = <div>{this.props.error}</div>;\r\n\r\n    if (this.props.loading) {\r\n      return Loading;\r\n    } else if (this.props.error) {\r\n      return Err;\r\n    } else {\r\n      return <Detail movieDetail={this.props.movieDetail} />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getDetail: id => {\r\n    dispatch(getDetail(id));\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  movieDetail: state.movieDetail,\r\n  loading: state.loading,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);\r\n","import React from \"react\";\r\nimport { MovieList, Sidebar } from \"../components\";\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <>\r\n      <div className=\"container__fluid\">\r\n        <div className=\"container__row\">\r\n          <div className=\"container__col-3\">\r\n            <Sidebar />\r\n          </div>\r\n          <div className=\"container__col-9\">\r\n            <div className=\"container__row\">\r\n              <MovieList />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { Homepage, MovieDetail } from \"../pages\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route path=\"/moviedetail/:id\" component={MovieDetail} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"../src/style/main.scss\";\nimport { Header } from \"./components\";\nimport { Link } from \"react-router-dom\";\n\nimport Main from \"./container/Main\";\n\nfunction App(props) {\n  return (\n    <>\n      <Link to=\"/\">\n        <Header className=\"logo\" />\n      </Link>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  GET_DATA,\r\n  LOADING,\r\n  FETCH_ERROR,\r\n  GET_DETAIL,\r\n  SORT_TYPE\r\n} from \"./actions\";\r\n\r\nconst rootReducer = function(\r\n  state = {\r\n    movies: [],\r\n    loading: false,\r\n    error: null,\r\n    movieDetail: { image: {}, genres: [], rating: {} },\r\n    sort: \"\"\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case GET_DATA:\r\n      return {\r\n        ...state,\r\n        movies: [...action.movies],\r\n        _movies: [...action.movies],\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case LOADING:\r\n      return { ...state, loading: true };\r\n    case FETCH_ERROR:\r\n      return { ...state, loading: false, error: action.error };\r\n    case GET_DETAIL:\r\n      return {\r\n        ...state,\r\n        movieDetail: action.movieDetail,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case SORT_TYPE:\r\n      return { ...state, sort: action.sortType };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(\r\n  reducer /* preloadedState, */,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f\r\n  )\r\n);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst ProvideApp = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\nReactDOM.render(<ProvideApp />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}