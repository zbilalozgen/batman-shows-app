{"version":3,"sources":["asset/batarang.svg","components/Header.js","components/Movie.js","redux/actions.js","redux/actionCreators.js","components/MovieList.js","components/Sidebar.js","components/Detail.js","pages/MovieDetail.js","pages/Homepage.js","container/Main.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Header","className","src","batarang","alt","Movie","props","movie","name","rating","premiered","id","image","genres","nullReview","to","medium","average","editing","starCount","value","map","genre","key","Math","random","LOADING","FETCH_ERROR","SORT_TYPE","loading","type","fetchError","error","MovieList","scrollHandle","document","documentElement","clientHeight","window","scrollY","body","offsetHeight","setState","index","state","console","log","movies","sortMovies","sort","a","b","Date","show","this","getData","addEventListener","removeEventListener","ShowMovies","slice","Loading","bgColor","spinnerColor","textColor","logoSrc","text","Err","Component","connect","dispatch","axios","get","then","res","data","setTimeout","catch","err","message","sortType","classNames","sidebar__item","sidebar__item__active","onClick","Detail","movieDetail","summary","htmlSum","ReactHtmlParser","MovieDetail","getDetail","match","params","React","Homepage","Main","exact","path","component","App","Boolean","location","hostname","rootReducer","action","_movies","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,sICO5BC,MAJf,WACE,OAAO,yBAAKC,UAAU,OAAOC,IAAKC,IAAUC,IAAI,c,yBCuCnCC,MAvCf,SAAeC,GAAQ,IAAD,EACmCA,EAAMC,MAArDC,EADY,EACZA,KAAMC,EADM,EACNA,OAAQC,EADF,EACEA,UAAWC,EADb,EACaA,GAAIC,EADjB,EACiBA,MAAOC,EADxB,EACwBA,OACtCC,EAAa,0BAAMH,GAAG,eAAT,wBACnB,OACE,oCACE,kBAAC,IAAD,CAAMV,UAAU,oBAAoBc,GAAE,uBAAkBJ,IACtD,yBAAKV,UAAU,+BACb,yBAAKC,IAAKU,EAAMI,OAAQZ,IAAKI,IAC7B,yBAAKP,UAAU,yBACb,wBAAIA,UAAU,oBAAoBO,GAElC,4BACGC,EAAOQ,QACN,kBAAC,IAAD,CACET,KAAK,QACLU,SAAS,EACTC,UAAW,GACXC,MAAOX,EAAOQ,UAGhBH,GAGJ,6CAAmBJ,GAClBG,EAAOQ,KAAI,SAAAC,GACV,OACE,0BACEC,IAAKC,KAAKC,SACVxB,UAAU,wBAFZ,UAGKqB,Y,gDChCRI,EAAU,UACVC,EAAc,cAEdC,EAAY,Y,iBCKlB,SAASC,IACd,MAAO,CAAEC,KAAMJ,GAqBV,SAASK,EAAWC,GACzB,MAAO,CAAEF,KAAMH,EAAaK,MAAOA,G,6BCxB/BC,E,YACJ,WAAY3B,GAAQ,IAAD,8BACjB,4CAAMA,KAgBR4B,aAAe,WAEXC,SAASC,gBAAgBC,aAAeC,OAAOC,SAC/CJ,SAASK,KAAKC,cAEd,EAAKC,SACH,CACEC,MAAO,EAAKC,MAAMD,MAAQ,GAE5BE,QAAQC,IAAI,EAAKF,MAAMG,UA1BV,EA+BnBC,WAAa,SAACD,EAAQE,GACpB,MAAa,KAATA,EACKF,EACW,cAATE,EACF,YAAIF,GAAQE,MAAK,SAASC,EAAGC,GAClC,OAAO,IAAIC,KAAKD,EAAEE,KAAK3C,WAAa,IAAI0C,KAAKF,EAAEG,KAAK3C,cAEpC,eAATuC,EACF,YAAIF,GAAQE,MAAK,SAASC,EAAGC,GAClC,OAAO,IAAIC,KAAKF,EAAEG,KAAK3C,WAAa,IAAI0C,KAAKD,EAAEE,KAAK3C,mBAFjD,GAnCP,EAAKkC,MAAQ,CACXD,MAAO,GAJQ,E,iFASjBW,KAAKhD,MAAMiD,UACXjB,OAAOkB,iBAAiB,SAAUF,KAAKpB,gB,6CAIvCI,OAAOmB,oBAAoB,SAAUH,KAAKpB,gB,+BAgC1C,IAAMwB,EAAaJ,KAAKN,WAAWM,KAAKhD,MAAMyC,OAAQO,KAAKhD,MAAM2C,MAC9DU,MAAM,EAAGL,KAAKV,MAAMD,OACpBtB,KAAI,SAAAd,GACH,OAAO,kBAAC,EAAD,CAAOgB,IAAKhB,EAAM8C,KAAK1C,GAAIJ,MAAOA,EAAM8C,UAE7CO,EACJ,kBAAC,IAAD,CACE/B,SAAS,EACTgC,QAAQ,UACRC,aAAa,UACbC,UAAU,UACVC,QAAS7D,IACT8D,KAAK,oCAEL,kDAGEC,EAAM,6BAAMZ,KAAKhD,MAAM0B,OAC7B,OAAIsB,KAAKhD,MAAMuB,QACN+B,EACEN,KAAKhD,MAAM0B,MACbkC,EAEAR,M,GAtEWS,aAwFTC,eAPS,SAAAxB,GAAK,MAAK,CAChCG,OAAQH,EAAMG,OACdlB,QAASe,EAAMf,QACfG,MAAOY,EAAMZ,MACbiB,KAAML,EAAMK,SAVa,SAAAoB,GAAQ,MAAK,CACtCd,QAAS,SAAAR,GACPsB,GDvEK,SAAAA,GACLA,EAASxC,KACTyC,IACGC,IADH,gDAEGC,MAAK,SAAAC,GACJ,IAAM1B,EAAS0B,EAAIC,KAEnBC,YAAW,WACTN,EAAS,CAAEvC,KDtBG,WCsBaiB,OAAQA,MAClC,QAEJ6B,OAAM,SAAAC,GACLR,EAAStC,EAAW8C,EAAIC,oBCsEjBV,CAA6CnC,G,iBC/C5D,IAUemC,eAJS,SAAAxB,GAAK,MAAK,CAChCK,KAAML,EAAMK,SAPa,SAAAoB,GAAQ,MAAK,CACtCU,SAAU,SAAA9B,GACRoB,EFIG,SAAkBU,GACvB,MAAO,CAAEjD,KAAMF,EAAWmD,SAAUA,GELzBA,CAAS9B,QAQPmB,EAtDf,SAAiB9D,GACf,OACE,oCACE,yBAAKL,UAAU,WACb,wBAAIA,UAAU,kBAAd,0BACA,uBACEA,UAAW+E,IAAW,CACpBC,eAAe,EACfC,sBAAsC,eAAf5E,EAAM2C,OAE/BkC,QAAS,WACP7E,EAAMyE,SAAS,gBANnB,oBAYA,uBACE9E,UAAW+E,IAAW,CACpBC,eAAe,EACfC,sBAAsC,cAAf5E,EAAM2C,OAE/BkC,QAAS,WACP7E,EAAMyE,SAAS,eANnB,mBASmB,KAEnB,uBACE9E,UAAW+E,IAAW,CACpBC,eAAe,EACfC,sBAAsC,KAAf5E,EAAM2C,OAE/BkC,QAAS,WACP7E,EAAMyE,SAAS,MANnB,gB,wBCiBOK,MA/Cf,SAAgB9E,GAAQ,IAAD,EASjBA,EAAM+E,YAPR7E,EAFmB,EAEnBA,KACA8E,EAHmB,EAGnBA,QACA1E,EAJmB,EAInBA,MACAH,EALmB,EAKnBA,OACAI,EANmB,EAMnBA,OACAiB,EAPmB,EAOnBA,KACApB,EARmB,EAQnBA,UAGI6E,EAAUC,IAAgBF,GAEhC,OACE,6BAASrF,UAAU,kBACjB,6BAASA,UAAU,uBACjB,4BAAQA,UAAU,kBAChB,yBAAKC,IAAKU,EAAMI,OAAQf,UAAU,gBAAgBG,IAAI,OAGxD,yBAAKH,UAAU,gBACb,wBAAIA,UAAU,iBAAiBO,GAC9BK,EAAOQ,KAAI,SAAAC,GACV,OACE,0BACEC,IAAKC,KAAKC,SACVxB,UAAU,oBAFZ,UAGKqB,OAGRiE,GAGH,4BAAQtF,UAAU,kBAChB,0BAAMA,UAAU,oBAAoB6B,GACpC,0BAAM7B,UAAU,oBACbQ,EAAOQ,QAAP,kBACcR,EAAOQ,SAClB,wBAEN,0BAAMhB,UAAU,oBAAoBS,OCpCxC+E,E,YACJ,WAAYnF,GAAQ,IAAD,8BACjB,4CAAMA,KAEDsC,MAAQ,GAHI,E,iFAOjBU,KAAKhD,MAAMoF,UAAUpC,KAAKhD,MAAMqF,MAAMC,OAAOjF,M,+BAI7C,IAAMiD,EACJ,kBAAC,IAAD,CACE/B,SAAS,EACTgC,QAAQ,UACRC,aAAa,UACbC,UAAU,UACVC,QAAS7D,IACT8D,KAAK,qCAGHC,EAAM,6BAAMZ,KAAKhD,MAAM0B,OAE7B,OAAIsB,KAAKhD,MAAMuB,QACN+B,EACEN,KAAKhD,MAAM0B,MACbkC,EAEA,kBAAC,EAAD,CAAQmB,YAAa/B,KAAKhD,MAAM+E,kB,GA7BnBQ,IAAM1B,WA8CjBC,eANS,SAAAxB,GAAK,MAAK,CAChCyC,YAAazC,EAAMyC,YACnBxD,QAASe,EAAMf,QACfG,MAAOY,EAAMZ,UATY,SAAAqC,GAAQ,MAAK,CACtCqB,UAAW,SAAA/E,GACT0D,EJNqB,SAAA1D,GACvB,OAAO,SAAA0D,GACLA,EAASxC,KACTyC,IACGC,IADH,uCACuC5D,IACpC6D,MAAK,SAAAC,GACJ,IAAMY,EAAcZ,EAAIC,KAExBC,YAAW,WACTN,EAAS,CAAEvC,KD3CK,aC2CauD,YAAaA,MACzC,QAEJT,OAAM,SAAAC,GACLR,EAAStC,EAAW8C,EAAIC,cIPnBY,CAAU/E,QAURyD,CAA6CqB,GC/B7CK,MAnBf,WACE,OACE,oCACE,yBAAK7F,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,iBAAiBU,GAAG,cACjC,kBAAC,EAAD,YCECoF,MAXf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWJ,IACjC,kBAAC,IAAD,CAAOG,KAAK,mBAAmBC,UAAWT,OCUnCU,MAXf,SAAa7F,GACX,OACE,oCACE,kBAAC,IAAD,CAAMS,GAAG,KACP,kBAAC,EAAD,CAAQd,UAAU,UAEpB,kBAAC,EAAD,QCFcmG,QACW,cAA7B9D,OAAO+D,SAASC,UAEe,UAA7BhE,OAAO+D,SAASC,UAEhBhE,OAAO+D,SAASC,SAASX,MACvB,2D,4BC2BSY,EArCK,WASjB,IARD3D,EAQA,uDARQ,CACNG,OAAQ,GACRlB,SAAS,EACTG,MAAO,KACPqD,YAAa,CAAEzE,MAAO,GAAIC,OAAQ,GAAIJ,OAAQ,IAC9CwC,KAAM,IAERuD,EACA,uCACA,OAAQA,EAAO1E,MACb,IVnBoB,WUoBlB,OAAO,eACFc,EADL,CAEEG,OAAO,YAAKyD,EAAOzD,QACnB0D,QAAQ,YAAKD,EAAOzD,QACpBlB,SAAS,EACTG,MAAO,OAEX,KAAKN,EACH,OAAO,eAAKkB,EAAZ,CAAmBf,SAAS,IAC9B,KAAKF,EACH,OAAO,eAAKiB,EAAZ,CAAmBf,SAAS,EAAOG,MAAOwE,EAAOxE,QACnD,IV5BsB,aU6BpB,OAAO,eACFY,EADL,CAEEyC,YAAamB,EAAOnB,YACpBxD,SAAS,EACTG,MAAO,OAEX,KAAKJ,EACH,OAAO,eAAKgB,EAAZ,CAAmBK,KAAMuD,EAAOzB,WAClC,QACE,OAAOnC,IChCE8D,EALDC,YACZC,EAEAC,YAAgBC,MCSlBC,IAASC,OAAO,mBAPG,kBACjB,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,UAIU,MAAgBvE,SAAS8E,eAAe,SHmHlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5C,MAAK,SAAA6C,GACjCA,EAAaC,iB","file":"static/js/main.5c4e8e80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/batarang.ae7fc5d0.svg\";","import React from \"react\";\nimport batarang from \"../asset/batarang.svg\";\n\nfunction Header() {\n  return <img className=\"logo\" src={batarang} alt=\"logo-bat\" />;\n}\n\nexport default Header;\n","import React from \"react\";\nimport StarRatingComponent from \"react-star-rating-component\";\nimport { Link } from \"react-router-dom\";\n\nfunction Movie(props) {\n  const { name, rating, premiered, id, image, genres } = props.movie;\n  const nullReview = <span id=\"null-review\">Waiting for reviews!</span>;\n  return (\n    <>\n      <Link className=\"movie-card__link \" to={`/moviedetail/${id}`}>\n        <div className=\"movie-card container__col-4\">\n          <img src={image.medium} alt={name} />\n          <div className=\"movie-card__container\">\n            <h1 className=\"movie-card_title\">{name}</h1>\n\n            <h3>\n              {rating.average ? (\n                <StarRatingComponent\n                  name=\"rate2\"\n                  editing={false}\n                  starCount={10}\n                  value={rating.average}\n                />\n              ) : (\n                nullReview\n              )}\n            </h3>\n            <h4>Premier date: {premiered}</h4>\n            {genres.map(genre => {\n              return (\n                <span\n                  key={Math.random()}\n                  className=\"movie-card__subtitle\"\n                >{`${genre}`}</span>\n              );\n            })}\n          </div>\n        </div>\n      </Link>\n    </>\n  );\n}\n\nexport default Movie;\n","export const GET_DATA = \"GET_DATA\";\nexport const LOADING = \"LOADING\";\nexport const FETCH_ERROR = \"FETCH_ERROR\";\nexport const GET_DETAIL = \"GET_DETAIL\";\nexport const SORT_TYPE = \"SORT_TYPE\";\n","import {\r\n  GET_DATA,\r\n  LOADING,\r\n  FETCH_ERROR,\r\n  GET_DETAIL,\r\n  SORT_TYPE\r\n} from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\nexport function loading() {\r\n  return { type: LOADING };\r\n}\r\n\r\nexport const getData = () => {\r\n  return dispatch => {\r\n    dispatch(loading());\r\n    axios\r\n      .get(`https://api.tvmaze.com/search/shows?q=batman`)\r\n      .then(res => {\r\n        const movies = res.data;\r\n        //To see loading screen\r\n        setTimeout(() => {\r\n          dispatch({ type: GET_DATA, movies: movies });\r\n        }, 2000);\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchError(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport function fetchError(error) {\r\n  return { type: FETCH_ERROR, error: error };\r\n}\r\n\r\n// http://api.tvmaze.com/shows/\r\n\r\nexport const getDetail = id => {\r\n  return dispatch => {\r\n    dispatch(loading());\r\n    axios\r\n      .get(`https://api.tvmaze.com/shows/${id}`)\r\n      .then(res => {\r\n        const movieDetail = res.data;\r\n        //To see loading screen\r\n        setTimeout(() => {\r\n          dispatch({ type: GET_DETAIL, movieDetail: movieDetail });\r\n        }, 2000);\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchError(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport function sortType(sortType) {\r\n  return { type: SORT_TYPE, sortType: sortType };\r\n}\r\n","import React, { Component } from \"react\";\nimport { getData } from \"../redux/actionCreators\";\nimport { Movie } from \"../components\";\nimport { connect } from \"react-redux\";\nimport LoadingScreen from \"react-loading-screen\";\n\nimport batarang from \"../asset/batarang.svg\";\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      index: 6\n    };\n  }\n\n  componentDidMount() {\n    this.props.getData();\n    window.addEventListener(\"scroll\", this.scrollHandle);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.scrollHandle);\n  }\n\n  scrollHandle = () => {\n    if (\n      document.documentElement.clientHeight + window.scrollY >=\n      document.body.offsetHeight\n    ) {\n      this.setState(\n        {\n          index: this.state.index + 3\n        },\n        console.log(this.state.movies)\n      );\n    }\n  };\n\n  sortMovies = (movies, sort) => {\n    if (sort === \"\") {\n      return movies;\n    } else if (sort === \"ascending\") {\n      return [...movies].sort(function(a, b) {\n        return new Date(b.show.premiered) - new Date(a.show.premiered);\n      });\n    } else if (sort === \"descending\") {\n      return [...movies].sort(function(a, b) {\n        return new Date(a.show.premiered) - new Date(b.show.premiered);\n      });\n    }\n  };\n\n  render() {\n    const ShowMovies = this.sortMovies(this.props.movies, this.props.sort)\n      .slice(0, this.state.index)\n      .map(movie => {\n        return <Movie key={movie.show.id} movie={movie.show} />;\n      });\n    const Loading = (\n      <LoadingScreen\n        loading={true}\n        bgColor=\"#f1f1f1\"\n        spinnerColor=\"#9ee5f8\"\n        textColor=\"#676767\"\n        logoSrc={batarang}\n        text=\"Your Batman Movie's on its way  \"\n      >\n        <div>Loadable content</div>\n      </LoadingScreen>\n    );\n    const Err = <div>{this.props.error}</div>;\n    if (this.props.loading) {\n      return Loading;\n    } else if (this.props.error) {\n      return Err;\n    } else {\n      return ShowMovies;\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getData: movies => {\n    dispatch(getData(movies));\n  }\n});\n\nconst mapStateToProps = state => ({\n  movies: state.movies,\n  loading: state.loading,\n  error: state.error,\n  sort: state.sort\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { sortType } from \"../redux/actionCreators\";\nimport classNames from \"classnames\";\n\nfunction Sidebar(props) {\n  return (\n    <>\n      <div className=\"sidebar\">\n        <h4 className=\"sidebar__title\">SORT BY PREMIERED DATE</h4>\n        <p\n          className={classNames({\n            sidebar__item: true,\n            sidebar__item__active: props.sort === \"descending\"\n          })}\n          onClick={() => {\n            props.sortType(\"descending\");\n          }}\n        >\n          OLDEST TO NEWEST\n        </p>\n\n        <p\n          className={classNames({\n            sidebar__item: true,\n            sidebar__item__active: props.sort === \"ascending\"\n          })}\n          onClick={() => {\n            props.sortType(\"ascending\");\n          }}\n        >\n          NEWEST TO OLDEST{\" \"}\n        </p>\n        <p\n          className={classNames({\n            sidebar__item: true,\n            sidebar__item__active: props.sort === \"\"\n          })}\n          onClick={() => {\n            props.sortType(\"\");\n          }}\n        >\n          NO SORT\n        </p>\n      </div>\n    </>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  sortType: sort => {\n    dispatch(sortType(sort));\n  }\n});\n\nconst mapStateToProps = state => ({\n  sort: state.sort\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nfunction Detail(props) {\n  const {\n    name,\n    summary,\n    image,\n    rating,\n    genres,\n    type,\n    premiered\n  } = props.movieDetail;\n\n  const htmlSum = ReactHtmlParser(summary);\n\n  return (\n    <section className=\"card-container\">\n      <article className=\"c-card c-card--wide\">\n        <header className=\"c-card__header\">\n          <img src={image.medium} className=\"c-card__image\" alt=\" \" />\n        </header>\n\n        <div className=\"c-card__body\">\n          <h1 className=\"c-card__title\">{name}</h1>\n          {genres.map(genre => {\n            return (\n              <span\n                key={Math.random()}\n                className=\"c-card__subtitle\"\n              >{`${genre}`}</span>\n            );\n          })}\n          {htmlSum}\n        </div>\n\n        <footer className=\"c-card__footer\">\n          <span className=\"c-card__subtitle\">{type}</span>\n          <span className=\"c-card__subtitle\">\n            {rating.average\n              ? `Rating: ${rating.average}`\n              : \"Waiting for reviews!\"}\n          </span>\n          <span className=\"c-card__subtitle\">{premiered}</span>\n        </footer>\n      </article>\n    </section>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\nimport Detail from \"../components/Detail\";\nimport { connect } from \"react-redux\";\nimport { getDetail } from \"../redux/actionCreators\";\nimport LoadingScreen from \"react-loading-screen\";\nimport batarang from \"../asset/batarang.svg\";\n\nclass MovieDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.getDetail(this.props.match.params.id);\n  }\n\n  render() {\n    const Loading = (\n      <LoadingScreen\n        loading={true}\n        bgColor=\"#f1f1f1\"\n        spinnerColor=\"#9ee5f8\"\n        textColor=\"#676767\"\n        logoSrc={batarang}\n        text=\"Your Batman Movie's on its way  \"\n      ></LoadingScreen>\n    );\n    const Err = <div>{this.props.error}</div>;\n\n    if (this.props.loading) {\n      return Loading;\n    } else if (this.props.error) {\n      return Err;\n    } else {\n      return <Detail movieDetail={this.props.movieDetail} />;\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getDetail: id => {\n    dispatch(getDetail(id));\n  }\n});\n\nconst mapStateToProps = state => ({\n  movieDetail: state.movieDetail,\n  loading: state.loading,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);\n","import React from \"react\";\nimport { MovieList, Sidebar } from \"../components\";\n\nfunction Homepage() {\n  return (\n    <>\n      <div className=\"container__fluid\">\n        <div className=\"container__row\">\n          <div className=\"container__col-3\">\n            <Sidebar />\n          </div>\n          <div className=\"container__col-9\">\n            <div className=\"container__row\" id=\"movie-list\">\n              <MovieList />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { Homepage, MovieDetail } from \"../pages\";\n\nfunction Main() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/moviedetail/:id\" component={MovieDetail} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"../src/style/main.scss\";\nimport { Header } from \"./components\";\nimport { Link } from \"react-router-dom\";\n\nimport Main from \"./container/Main\";\n\nfunction App(props) {\n  return (\n    <>\n      <Link to=\"/\">\n        <Header className=\"logo\" />\n      </Link>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_DATA,\n  LOADING,\n  FETCH_ERROR,\n  GET_DETAIL,\n  SORT_TYPE\n} from \"./actions\";\n\nconst rootReducer = function(\n  state = {\n    movies: [],\n    loading: false,\n    error: null,\n    movieDetail: { image: {}, genres: [], rating: {} },\n    sort: \"\"\n  },\n  action\n) {\n  switch (action.type) {\n    case GET_DATA:\n      return {\n        ...state,\n        movies: [...action.movies],\n        _movies: [...action.movies],\n        loading: false,\n        error: null\n      };\n    case LOADING:\n      return { ...state, loading: true };\n    case FETCH_ERROR:\n      return { ...state, loading: false, error: action.error };\n    case GET_DETAIL:\n      return {\n        ...state,\n        movieDetail: action.movieDetail,\n        loading: false,\n        error: null\n      };\n    case SORT_TYPE:\n      return { ...state, sort: action.sortType };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(\n  reducer /* preloadedState, */,\n\n  applyMiddleware(thunk)\n);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst ProvideApp = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\nReactDOM.render(<ProvideApp />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}